<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jb.dao.ProductCommentMapper" >
  <resultMap id="BaseResultMap" type="com.jb.entity.ProductComment" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="createTime" property="createtime" jdbcType="BIGINT" />
    <result column="updateTime" property="updatetime" jdbcType="BIGINT" />
    <result column="productId" property="productid" jdbcType="BIGINT" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, createTime, updateTime, productId, score, comment, level
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_product_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_product_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jb.entity.ProductComment" >
    insert into t_product_comment (id, createTime, updateTime, 
      productId, score, comment, 
      level)
    values (#{id,jdbcType=BIGINT}, #{createtime,jdbcType=BIGINT}, #{updatetime,jdbcType=BIGINT}, 
      #{productid,jdbcType=BIGINT}, #{score,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR}, 
      #{level,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.jb.entity.ProductComment" >
    insert into t_product_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
      <if test="productid != null" >
        productId,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="level != null" >
        level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=BIGINT},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=BIGINT},
      </if>
      <if test="productid != null" >
        #{productid,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jb.entity.ProductComment" >
    update t_product_comment
    <set >
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=BIGINT},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=BIGINT},
      </if>
      <if test="productid != null" >
        productId = #{productid,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jb.entity.ProductComment" >
    update t_product_comment
    set createTime = #{createtime,jdbcType=BIGINT},
      updateTime = #{updatetime,jdbcType=BIGINT},
      productId = #{productid,jdbcType=BIGINT},
      score = #{score,jdbcType=INTEGER},
      comment = #{comment,jdbcType=VARCHAR},
      level = #{level,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
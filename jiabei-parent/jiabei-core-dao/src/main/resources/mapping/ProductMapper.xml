<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jb.dao.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.jb.entity.Product" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="subName" property="subname" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="CHAR" />
    <result column="productType" property="producttype" jdbcType="BIGINT" />
    <result column="onSaleTime" property="onsaletime" jdbcType="BIGINT" />
    <result column="offSaleTime" property="offsaletime" jdbcType="BIGINT" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="maxPrice" property="maxprice" jdbcType="BIGINT" />
    <result column="minPrice" property="minprice" jdbcType="BIGINT" />
    <result column="saleCount" property="salecount" jdbcType="INTEGER" />
    <result column="viewCount" property="viewcount" jdbcType="INTEGER" />
    <result column="commentCount" property="commentcount" jdbcType="INTEGER" />
    <result column="commentScore" property="commentscore" jdbcType="INTEGER" />
    <result column="viewProperties" property="viewproperties" jdbcType="VARCHAR" />
    <result column="goodCommnetCount" property="goodcommnetcount" jdbcType="INTEGER" />
    <result column="commonCommentCount" property="commoncommentcount" jdbcType="INTEGER" />
    <result column="badCommentCount" property="badcommentcount" jdbcType="INTEGER" />
    <result column="brandId" property="brandid" jdbcType="BIGINT" />
    <result column="createTime" property="createtime" jdbcType="BIGINT" />
    <result column="updateTime" property="updatetime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, subName, code, productType, onSaleTime, offSaleTime, state, maxPrice, minPrice, 
    saleCount, viewCount, commentCount, commentScore, viewProperties, goodCommnetCount, 
    commonCommentCount, badCommentCount, brandId, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_product
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_product
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jb.entity.Product" >
    insert into t_product (id, name, subName, 
      code, productType, onSaleTime, 
      offSaleTime, state, maxPrice, 
      minPrice, saleCount, viewCount, 
      commentCount, commentScore, viewProperties, 
      goodCommnetCount, commonCommentCount, badCommentCount, 
      brandId, createTime, updateTime
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{subname,jdbcType=VARCHAR}, 
      #{code,jdbcType=CHAR}, #{producttype,jdbcType=BIGINT}, #{onsaletime,jdbcType=BIGINT}, 
      #{offsaletime,jdbcType=BIGINT}, #{state,jdbcType=TINYINT}, #{maxprice,jdbcType=BIGINT}, 
      #{minprice,jdbcType=BIGINT}, #{salecount,jdbcType=INTEGER}, #{viewcount,jdbcType=INTEGER}, 
      #{commentcount,jdbcType=INTEGER}, #{commentscore,jdbcType=INTEGER}, #{viewproperties,jdbcType=VARCHAR}, 
      #{goodcommnetcount,jdbcType=INTEGER}, #{commoncommentcount,jdbcType=INTEGER}, #{badcommentcount,jdbcType=INTEGER}, 
      #{brandid,jdbcType=BIGINT}, #{createtime,jdbcType=BIGINT}, #{updatetime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jb.entity.Product" >
    insert into t_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="subname != null" >
        subName,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="producttype != null" >
        productType,
      </if>
      <if test="onsaletime != null" >
        onSaleTime,
      </if>
      <if test="offsaletime != null" >
        offSaleTime,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="maxprice != null" >
        maxPrice,
      </if>
      <if test="minprice != null" >
        minPrice,
      </if>
      <if test="salecount != null" >
        saleCount,
      </if>
      <if test="viewcount != null" >
        viewCount,
      </if>
      <if test="commentcount != null" >
        commentCount,
      </if>
      <if test="commentscore != null" >
        commentScore,
      </if>
      <if test="viewproperties != null" >
        viewProperties,
      </if>
      <if test="goodcommnetcount != null" >
        goodCommnetCount,
      </if>
      <if test="commoncommentcount != null" >
        commonCommentCount,
      </if>
      <if test="badcommentcount != null" >
        badCommentCount,
      </if>
      <if test="brandid != null" >
        brandId,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="updatetime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="subname != null" >
        #{subname,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=CHAR},
      </if>
      <if test="producttype != null" >
        #{producttype,jdbcType=BIGINT},
      </if>
      <if test="onsaletime != null" >
        #{onsaletime,jdbcType=BIGINT},
      </if>
      <if test="offsaletime != null" >
        #{offsaletime,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="maxprice != null" >
        #{maxprice,jdbcType=BIGINT},
      </if>
      <if test="minprice != null" >
        #{minprice,jdbcType=BIGINT},
      </if>
      <if test="salecount != null" >
        #{salecount,jdbcType=INTEGER},
      </if>
      <if test="viewcount != null" >
        #{viewcount,jdbcType=INTEGER},
      </if>
      <if test="commentcount != null" >
        #{commentcount,jdbcType=INTEGER},
      </if>
      <if test="commentscore != null" >
        #{commentscore,jdbcType=INTEGER},
      </if>
      <if test="viewproperties != null" >
        #{viewproperties,jdbcType=VARCHAR},
      </if>
      <if test="goodcommnetcount != null" >
        #{goodcommnetcount,jdbcType=INTEGER},
      </if>
      <if test="commoncommentcount != null" >
        #{commoncommentcount,jdbcType=INTEGER},
      </if>
      <if test="badcommentcount != null" >
        #{badcommentcount,jdbcType=INTEGER},
      </if>
      <if test="brandid != null" >
        #{brandid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=BIGINT},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jb.entity.Product" >
    update t_product
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="subname != null" >
        subName = #{subname,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        code = #{code,jdbcType=CHAR},
      </if>
      <if test="producttype != null" >
        productType = #{producttype,jdbcType=BIGINT},
      </if>
      <if test="onsaletime != null" >
        onSaleTime = #{onsaletime,jdbcType=BIGINT},
      </if>
      <if test="offsaletime != null" >
        offSaleTime = #{offsaletime,jdbcType=BIGINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="maxprice != null" >
        maxPrice = #{maxprice,jdbcType=BIGINT},
      </if>
      <if test="minprice != null" >
        minPrice = #{minprice,jdbcType=BIGINT},
      </if>
      <if test="salecount != null" >
        saleCount = #{salecount,jdbcType=INTEGER},
      </if>
      <if test="viewcount != null" >
        viewCount = #{viewcount,jdbcType=INTEGER},
      </if>
      <if test="commentcount != null" >
        commentCount = #{commentcount,jdbcType=INTEGER},
      </if>
      <if test="commentscore != null" >
        commentScore = #{commentscore,jdbcType=INTEGER},
      </if>
      <if test="viewproperties != null" >
        viewProperties = #{viewproperties,jdbcType=VARCHAR},
      </if>
      <if test="goodcommnetcount != null" >
        goodCommnetCount = #{goodcommnetcount,jdbcType=INTEGER},
      </if>
      <if test="commoncommentcount != null" >
        commonCommentCount = #{commoncommentcount,jdbcType=INTEGER},
      </if>
      <if test="badcommentcount != null" >
        badCommentCount = #{badcommentcount,jdbcType=INTEGER},
      </if>
      <if test="brandid != null" >
        brandId = #{brandid,jdbcType=BIGINT},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=BIGINT},
      </if>
      <if test="updatetime != null" >
        updateTime = #{updatetime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jb.entity.Product" >
    update t_product
    set name = #{name,jdbcType=VARCHAR},
      subName = #{subname,jdbcType=VARCHAR},
      code = #{code,jdbcType=CHAR},
      productType = #{producttype,jdbcType=BIGINT},
      onSaleTime = #{onsaletime,jdbcType=BIGINT},
      offSaleTime = #{offsaletime,jdbcType=BIGINT},
      state = #{state,jdbcType=TINYINT},
      maxPrice = #{maxprice,jdbcType=BIGINT},
      minPrice = #{minprice,jdbcType=BIGINT},
      saleCount = #{salecount,jdbcType=INTEGER},
      viewCount = #{viewcount,jdbcType=INTEGER},
      commentCount = #{commentcount,jdbcType=INTEGER},
      commentScore = #{commentscore,jdbcType=INTEGER},
      viewProperties = #{viewproperties,jdbcType=VARCHAR},
      goodCommnetCount = #{goodcommnetcount,jdbcType=INTEGER},
      commonCommentCount = #{commoncommentcount,jdbcType=INTEGER},
      badCommentCount = #{badcommentcount,jdbcType=INTEGER},
      brandId = #{brandid,jdbcType=BIGINT},
      createTime = #{createtime,jdbcType=BIGINT},
      updateTime = #{updatetime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>